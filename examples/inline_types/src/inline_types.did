type AzleInline10134563958881694720 = record { testVariant : TestVariant };
type AzleInline10664464874059054195 = record {
  "variant" : AzleInline7490137446430438151;
};
type AzleInline11176947628425875238 = variant { prop1 : Test };
type AzleInline1136376404574922452 = variant {
  ok : opt AzleInline4422132652328047813;
  err : InsertError;
};
type AzleInline15709029710433407382 = record { id : text; title : text };
type AzleInline16310876903028532563 = record {
  prop1 : opt text;
  prop2 : AzleInline16788612102005432527;
  prop3 : opt AzleInline488414271151064074;
};
type AzleInline16598272309081177769 = record {
  "opt" : opt AzleInline2461023088926241501;
  "vec" : vec AzleInline2461023088926241501;
  primitive : text;
  "func" : func () -> (
      record { prop1 : text; "variant" : AzleInline17765423431258201622 },
    ) query;
  "variant" : AzleInline8273904979405424738;
  "record" : AzleInline2236061876033704896;
};
type AzleInline16788612102005432527 = variant { var1; var2 : TestVariant };
type AzleInline17765423431258201622 = variant {
  v1;
  v2 : AzleInline4334856068537875025;
};
type AzleInline18069512391554055116 = variant { var1; var2 };
type AzleInline2236061876033704896 = record {
  optional : opt nat64;
  prop1 : text;
  "variant" : AzleInline7888633673241165148;
};
type AzleInline2461023088926241501 = record {
  "opt" : opt text;
  "vec" : vec text;
  primitive : nat;
  "func" : func () -> (text);
  "variant" : AzleInline7888633673241165148;
  "record" : AzleInline4334856068537875025;
};
type AzleInline2544036346751232949 = record {
  prop1 : opt text;
  prop2 : AzleInline16788612102005432527;
  prop3 : opt AzleInline488414271151064074;
};
type AzleInline2914978839541039010 = record { prop1 : text; prop2 : Thing };
type AzleInline3497772238701600867 = variant { prop1 : UserVariant };
type AzleInline4334856068537875025 = record { prop1 : text };
type AzleInline4422132652328047813 = record {
  "variant" : AzleInline7490137446430438151;
};
type AzleInline4512439892601748518 = variant { var1; var2; var3 };
type AzleInline4698629609756288940 = variant { var1; var2 };
type AzleInline488414271151064074 = record { prop1 : nat };
type AzleInline7490137446430438151 = variant { var1; var2 : TestVariant };
type AzleInline7888633673241165148 = variant { v1; v2 };
type AzleInline8205775227596209522 = record { prop1 : text; prop2 : text };
type AzleInline8273904979405424738 = variant {
  v1;
  v2;
  v3 : AzleInline4334856068537875025;
};
type AzleInline8281352489336244159 = record { test : Test };
type InsertError = variant {
  ValueTooLarge : KeyTooLarge;
  KeyTooLarge : KeyTooLarge;
};
type KeyTooLarge = record { max : nat32; given : nat32 };
type ManualReply = variant { ok : AzleInline8205775227596209522; err : text };
type Reaction = variant { one; two; three : Test };
type Test = record { id : text };
type TestVariant = variant { prop1 : text; prop2 : Test };
type Thing = record { id : text };
type User1 = record { id : text; job : AzleInline15709029710433407382 };
type UserVariant = variant { prop1 };
service : () -> {
  complex : (AzleInline16598272309081177769) -> (
      AzleInline16598272309081177769,
    ) query;
  inline_func : (
      func (
          text,
          opt AzleInline2461023088926241501,
          vec AzleInline2461023088926241501,
          AzleInline2236061876033704896,
          AzleInline8273904979405424738,
          func () -> (
              record {
                prop1 : text;
                "variant" : AzleInline17765423431258201622;
              },
            ) query,
        ) -> () query,
    ) -> (
      func (
          text,
          opt AzleInline2461023088926241501,
          vec AzleInline2461023088926241501,
          AzleInline2236061876033704896,
          AzleInline8273904979405424738,
          func () -> (
              record {
                prop1 : text;
                "variant" : AzleInline17765423431258201622;
              },
            ) query,
        ) -> () query,
    ) query;
  inline_record_param : (AzleInline4334856068537875025) -> (text) query;
  inline_record_return_type : () -> (AzleInline8205775227596209522) query;
  inline_record_return_type_as_external_canister_call : () -> (ManualReply);
  inline_variant_param : (AzleInline18069512391554055116) -> (
      AzleInline4698629609756288940,
    ) query;
  inline_variant_return_type : () -> (AzleInline4512439892601748518) query;
  record_referencing_other_types_from_return_type : () -> (
      AzleInline2914978839541039010,
    ) query;
  record_referencing_record_from_param : (AzleInline8281352489336244159) -> (
      text,
    ) query;
  record_referencing_variant_from_param : (AzleInline10134563958881694720) -> (
      opt text,
    ) query;
  record_with_inline_fields : () -> (User1) query;
  stable_map_get : (AzleInline16310876903028532563) -> (
      opt AzleInline10664464874059054195,
    ) query;
  stable_map_insert : (
      AzleInline2544036346751232949,
      AzleInline10664464874059054195,
    ) -> (AzleInline1136376404574922452);
  variant_referencing_other_types_from_return_type : () -> (TestVariant) query;
  variant_referencing_record_from_param : (
      AzleInline11176947628425875238,
    ) -> () query;
  variant_referencing_variant_from_param : (
      AzleInline3497772238701600867,
    ) -> () query;
  variant_with_inline_fields : () -> (Reaction) query;
}