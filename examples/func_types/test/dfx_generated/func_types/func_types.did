type User = record {
    "id": text;
    "basic_func": BasicFunc;
    "complex_func": ComplexFunc;
};

type Reaction = variant { "Good": null; "Bad": null; "BasicFunc": BasicFunc; "ComplexFunc": ComplexFunc };

type BasicFunc = func (text) -> (text);
type ComplexFunc = func (User, Reaction) -> (nat64);

service: {
    "basic_func_param": (BasicFunc) -> (BasicFunc) query;
    "basic_func_return_type": () -> (BasicFunc) query;
    "complex_func_param": (ComplexFunc) -> (ComplexFunc) query;
    "complex_func_return_type": () -> (ComplexFunc) query;
}