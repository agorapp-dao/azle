type rec_0 = record {canister_id:principal};
type rec_1 = record {canister_id:principal};
type rec_3 = variant {stopped; stopping; running};
type rec_4 = record {freezing_threshold:nat; controllers:vec principal; memory_allocation:nat; compute_allocation:nat};
type rec_2 = record {status:rec_3; memory_size:nat; cycles:nat; settings:rec_4; module_hash:opt vec nat8};
type rec_5 = record {canister_id:principal};
service: () -> {
    executeCreateCanister: () -> (rec_0);
    executeUpdateSettings: (principal) -> (bool);
    executeInstallCode: (principal, vec nat8) -> (bool);
    executeUninstallCode: (principal) -> (bool);
    executeStartCanister: (principal) -> (bool);
    executeStopCanister: (principal) -> (bool);
    getCanisterStatus: (rec_1) -> (rec_2);
    executeDeleteCanister: (principal) -> (bool);
    executeDepositCycles: (principal) -> (bool);
    getRawRand: () -> (vec nat8);
    provisionalCreateCanisterWithCycles: () -> (rec_5);
    provisionalTopUpCanister: () -> (bool);
    getCreatedCanisterId: () -> (principal) query;
}
