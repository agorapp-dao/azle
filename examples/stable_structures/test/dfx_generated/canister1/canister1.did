type BlogPost = record { title : text };
type InsertError = variant {
  ValueTooLarge : KeyTooLarge;
  KeyTooLarge : KeyTooLarge;
};
type KeyTooLarge = record { max : nat32; given : nat32 };
type Reaction = variant { Sad; Happy };
type StableMap0InsertResult = variant { ok : opt text; err : InsertError };
type StableMap1InsertResult = variant { ok : opt vec nat8; err : InsertError };
type StableMap2InsertResult = variant { ok : opt nat; err : InsertError };
type StableMap3InsertResult = variant { ok : opt int; err : InsertError };
type StableMap4InsertResult = variant { ok : opt float32; err : InsertError };
type StableMap5InsertResult = variant { ok : opt float64; err : InsertError };
type StableMap6InsertResult = variant { ok : opt bool; err : InsertError };
type User = record { username : text; blog_posts : vec BlogPost };
service : () -> {
  stable_map_0_contains_key : (nat8) -> (bool) query;
  stable_map_0_get : (nat8) -> (opt text) query;
  stable_map_0_insert : (nat8, text) -> (StableMap0InsertResult);
  stable_map_0_is_empty : () -> (bool) query;
  stable_map_0_items : () -> (vec record { nat8; text }) query;
  stable_map_0_keys : () -> (vec nat8) query;
  stable_map_0_len : () -> (nat64) query;
  stable_map_0_remove : (nat8) -> (opt text);
  stable_map_0_values : () -> (vec text) query;
  stable_map_1_contains_key : (nat16) -> (bool) query;
  stable_map_1_get : (nat16) -> (opt vec nat8) query;
  stable_map_1_insert : (nat16, vec nat8) -> (StableMap1InsertResult);
  stable_map_1_is_empty : () -> (bool) query;
  stable_map_1_items : () -> (vec record { nat16; vec nat8 }) query;
  stable_map_1_keys : () -> (vec nat16) query;
  stable_map_1_len : () -> (nat64) query;
  stable_map_1_remove : (nat16) -> (opt vec nat8);
  stable_map_1_values : () -> (vec vec nat8) query;
  stable_map_2_contains_key : (nat32) -> (bool) query;
  stable_map_2_get : (nat32) -> (opt nat) query;
  stable_map_2_insert : (nat32, nat) -> (StableMap2InsertResult);
  stable_map_2_is_empty : () -> (bool) query;
  stable_map_2_items : () -> (vec record { nat32; nat }) query;
  stable_map_2_keys : () -> (vec nat32) query;
  stable_map_2_len : () -> (nat64) query;
  stable_map_2_remove : (nat32) -> (opt nat);
  stable_map_2_values : () -> (vec nat) query;
  stable_map_3_contains_key : (Reaction) -> (bool) query;
  stable_map_3_get : (Reaction) -> (opt int) query;
  stable_map_3_insert : (Reaction, int) -> (StableMap3InsertResult);
  stable_map_3_is_empty : () -> (bool) query;
  stable_map_3_items : () -> (vec record { Reaction; int }) query;
  stable_map_3_keys : () -> (vec Reaction) query;
  stable_map_3_len : () -> (nat64) query;
  stable_map_3_remove : (Reaction) -> (opt int);
  stable_map_3_values : () -> (vec int) query;
  stable_map_4_contains_key : (User) -> (bool) query;
  stable_map_4_get : (User) -> (opt float32) query;
  stable_map_4_insert : (User, float32) -> (StableMap4InsertResult);
  stable_map_4_is_empty : () -> (bool) query;
  stable_map_4_items : () -> (vec record { User; float32 }) query;
  stable_map_4_keys : () -> (vec User) query;
  stable_map_4_len : () -> (nat64) query;
  stable_map_4_remove : (User) -> (opt float32);
  stable_map_4_values : () -> (vec float32) query;
  stable_map_5_contains_key : (opt text) -> (bool) query;
  stable_map_5_get : (opt text) -> (opt float64) query;
  stable_map_5_insert : (opt text, float64) -> (StableMap5InsertResult);
  stable_map_5_is_empty : () -> (bool) query;
  stable_map_5_items : () -> (vec record { opt text; float64 }) query;
  stable_map_5_keys : () -> (vec opt text) query;
  stable_map_5_len : () -> (nat64) query;
  stable_map_5_remove : (opt text) -> (opt float64);
  stable_map_5_values : () -> (vec float64) query;
  stable_map_6_contains_key : (vec nat64) -> (bool) query;
  stable_map_6_get : (vec nat64) -> (opt bool) query;
  stable_map_6_insert : (vec nat64, bool) -> (StableMap6InsertResult);
  stable_map_6_is_empty : () -> (bool) query;
  stable_map_6_items : () -> (vec record { vec nat64; bool }) query;
  stable_map_6_keys : () -> (vec vec nat64) query;
  stable_map_6_len : () -> (nat64) query;
  stable_map_6_remove : (vec nat64) -> (opt bool);
  stable_map_6_values : () -> (vec bool) query;
}